class OlxApartment {
  pattern_title = /<h6 class=\"css-16v5mdi er34gjf0\">(.*?)<\/h6>/gi;

  pattern_title_item = /<h6 class=\"css-16v5mdi er34gjf0\">(.*?)<\/h6>/i;

  pattern_price = /<p data-testid=\"ad-price\" class=\"css-10b0gli er34gjf0\">(.*?)<\/p>/gi;

  pattern_price_item = /<p data-testid=\"ad-price\" class=\"css-10b0gli er34gjf0\">(.*?)<\/p>/i;

  pattern_reference = /\"css-rc5s2u\" href=\"(.*?)\"/gi;

  pattern_reference_item = /\"css-rc5s2u\" href=\"(.*?)\"/i;

  pattern_time_location = /\"css-veheph er34gjf0\">(.*?)<\/p>/gi;

  pattern_time_location_item = /\"css-veheph er34gjf0\">(.*?)<\/p>/i;

  pattern_floor = /\"css-b5m1rv er34gjf0\">Поверх:(.*?)<\/p>/gi;

  pattern_floor_item = /\"css-b5m1rv er34gjf0\">Поверх:(.*?)<\/p>/i;

  pattern_room = /\"css-b5m1rv er34gjf0\">Кількість кімнат:(.*?)<\/p>/gi;

  pattern_room_item = /\"css-b5m1rv er34gjf0\">Кількість кімнат:(.*?)<\/p>/i;

  pattern_area = /\"css-b5m1rv er34gjf0\">Загальна площа:(.*?)<\/p>/gi;

  pattern_area_item = /\"css-b5m1rv er34gjf0\">Загальна площа:(.*?)<\/p>/i;

  pattern_type = /\"css-b5m1rv er34gjf0\"><span>(.*?)<\/span><\/p>/gi;

  pattern_type_item = /\"css-b5m1rv er34gjf0\"><span>(.*?)<\/span><\/p>/i;

  pattern_etajnost = /\"css-b5m1rv er34gjf0\">Поверховість:(.*?)<\/p>/gi;

  pattern_etajnost_item = /\"css-b5m1rv er34gjf0\">Поверховість:(.*?)<\/p>/i;

  pattern_description = /<div\s+class="css-bgzo2k\s+er34gjf0">([\s\S]*?)<\/div>/i;

  pattern_description_item = /\"css-bgzo2k er34gjf0\">(.*?)<\/div>/i;

  title = [];

  price = [];

  url = [];

  time = [];

  location = [];

  floor = [];

  etajnost = [];

  rooms = [];

  type = [];

  description = [];

  main = [];

  area = [];

  constructor(t) { this.getText(t); }

  async getText(t) { await axios.get(t).then(async (t) => { var e = t.request.responseText.match(this.pattern_title); var e = (await this.getTitle(e), t.request.responseText.match(this.pattern_price)); var e = (await this.getPrice(e), t.request.responseText.match(this.pattern_reference)); var e = (await this.getReference(e), t.request.responseText.match(this.pattern_time_location)); await this.getTime_location(e); }).catch((t) => { console.log(t.message); }); }

  async getFullText(t) { await axios.get(t).then(async (t) => { var e = t.request.responseText.match(this.pattern_floor); var e = (await this.getFloor(e), t.request.responseText.match(this.pattern_room)); var e = (await this.getRoom(e), t.request.responseText.match(this.pattern_type)); var e = (await this.getType(e), t.request.responseText.match(this.pattern_etajnost)); var e = (await this.getEtajnost(e), t.request.responseText.match(this.pattern_area)); var e = (await this.getArea(e), t.request.responseText.match(this.pattern_description)); this.description.push(e[1]); }).catch((t) => { console.log(t.message); }); }

  getTitle(t) { for (let e of t) { e = e.match(this.pattern_title_item)[1]; this.title.push(e); } }

  getFloor(t) { for (let e of t) { e = e.match(this.pattern_floor_item)[1]; this.floor.push(parseInt(e)); } }

  getRoom(t) { for (let e of t) { e = e.match(this.pattern_room_item)[1]; this.rooms.push(parseInt(e)); } }

  getEtajnost(t) { for (let e of t) { e = e.match(this.pattern_etajnost_item)[1]; this.etajnost.push(parseInt(e)); } }

  getArea(t) { for (let e of t) { e = e.match(this.pattern_area_item)[1]; this.area.push(parseInt(e)); } }

  getType(t) { for (let e of t) { e = e.match(this.pattern_type_item)[1]; this.type.push(e); } }

  getPrice(t) { for (const s of t) { const r = s.match(this.pattern_price_item)[1]; let e = ''; for (let t = 0; t < r.length && r[t] !== '.'; t++)isFinite(r[t]) && r[t] !== ' ' && (e += r[t]); e.length > 0 && this.price.push(e); } }

  async getReference(t) { for (let e of t) { e = `https://www.olx.ua${e.match(this.pattern_reference_item)[1]}`; this.url.push(e), await this.getFullText(e); } }

  getTime_location(t) { for (const e of t) { let t = e.match(this.pattern_time_location_item)[1]; t = t.split('\x3c!-- --\x3e - \x3c!-- --\x3e'), this.location.push(t[0]), this.time.push(t[1]); } }
} function add_research() { const t = document.getElementById('url').value; axios.post('/api/add_research', { url: t }).then((t) => { document.getElementById('url').value = ' ', get_list(t); }).catch((t) => { console.log(t.messages); }); } function del_posts(t) { axios.post('/api/del_post', { _id: t }).then((t) => { get_posts_list(t); }).catch((t) => { console.log(t.messages); }); } function del_research(t) { axios.post('/api/del_research', { _id: t }).then((t) => { get_list(t); }).catch((t) => { console.log(t.messages); }); } function get_list(t) {
  const e = document.getElementById('list_research'); let s = ''; let r = t.request.responseText; const a = (r = JSON.parse(r)).length; let o = 1; for (let t = 0; t < a; t++) {
    str_all = String(r[t].url), str_url = String(r[t].url).substring(0, 150), s += `<tr>
                    <th scope="row">${o++}</th>
                    <td title="${str_all}">${str_url}</td>
                    <td><button class="btn btn-danger" onclick="del_research('${r[t]._id}')" type="button">Удалить</button><br>
                    <button class="btn btn-success" onclick="get_apartment('${str_all}')" type="button" id="download">Загрузка</button></td>
                </tr>`;
  }t = `<table class="table table-dark table-striped-columns">
                <thead>
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">Name</th>
                    <th scope="col">Action</th>
                </tr>
                </thead>
                <tbody>
                ${s}
                </tbody>
                </table>
`;e.innerHTML = t;
} function get_posts() { axios.get('/api/get_posts').then((t) => { get_posts_list(t); }).catch((t) => { console.log(t.messages); }); } function get_posts_list(t) {
  const e = document.getElementById('download_posts'); let s = ''; let r = t.request.responseText; const a = (r = JSON.parse(r)).length; let o = 1; for (let t = 0; t < a; t++) {
    str_url = String(r[t].title).substring(0, 50), s += `<tr>
                    <th scope="row">${o++}</th>
                    <td><a href="${r[t].url}" target="_blank">${str_url}</a></td>
                    <td>${r[t].rooms}</td>
                    <td>${r[t].floor}</td>
                    <td>${r[t].etajnost}</td>
                    <td>${r[t].area}</td>
                    <td>${r[t].price}</td>
                    <td><button class="btn btn-danger" onclick="del_posts('${r[t]._id}')" type="button">Удалить</button><br>
                </tr>`;
  }t = `<table class="table table-dark table-striped-columns">
                <thead>
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">Title</th>
                    <th scope="col">Rooms</th>
                    <th scope="col">Floor</th>
                    <th scope="col">Etajnost</th>
                    <th scope="col">Area</th>
                    <th scope="col">Price</th>
                    <th scope="col">Action</th>
                </tr>
                </thead>
                <tbody>
                ${s}
                </tbody>
                </table>
`;e.innerHTML = t;
} function get_research() { axios.get('/api/get_research').then((t) => { get_list(t); }).catch((t) => { console.log(t.messages); }); } function get_apartment(t) {
  const s = document.querySelectorAll('#download'); for (const e of s)e.setAttribute('disabled', 'disabled'); const r = []; const a = new OlxApartment(t); setTimeout(() => {
    const e = a.title.length; for (let t = 0; t < e; t++) {
      r.push({
        title: a.title[t], url: a.url[t], rooms: a.rooms[t], floor: a.floor[t], etajnost: a.etajnost[t], area: a.area[t], price: a.price[t], location: a.location[t], time: a.time[t], description: a.description[t], type: a.type[t],
      });
    } axios.post('/api/add_posts', r).then(() => { alert('Данные успешно загружены'); for (const t of s)t.removeAttribute('disabled'); }).catch((t) => { alert(`Возникла ошибка: ${t.message}`); });
  }, 4e4);
}
